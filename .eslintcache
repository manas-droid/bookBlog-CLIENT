[{"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\index.js":"1","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\App.js":"2","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\ApolloProvider.js":"3","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\utils\\AuthRoute.js":"4","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\AddPosts.js":"5","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\YourPosts.js":"6","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\SinglePost.js":"7","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\BookMark.js":"8","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\MenuBar.js":"9","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Register.js":"10","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\context\\AuthContext.js":"11","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Home.js":"12","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Login.js":"13","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\utils\\GraphQl.js":"14","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\YourPostComponent.js":"15","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\CommentComponent.js":"16","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\PostComponent.js":"17","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\CommentForm.js":"18","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\EditPost.js":"19","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\summaryAndTitle.js":"20","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\bookmarkAndFullPost.js":"21","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\likesComments.js":"22"},{"size":444,"mtime":1607681299055,"results":"23","hashOfConfig":"24"},{"size":1391,"mtime":1614673830295,"results":"25","hashOfConfig":"24"},{"size":675,"mtime":1611833022705,"results":"26","hashOfConfig":"24"},{"size":845,"mtime":1611834149585,"results":"27","hashOfConfig":"24"},{"size":2498,"mtime":1614678561860,"results":"28","hashOfConfig":"24"},{"size":844,"mtime":1611934356340,"results":"29","hashOfConfig":"24"},{"size":2018,"mtime":1614669060232,"results":"30","hashOfConfig":"24"},{"size":812,"mtime":1611914627166,"results":"31","hashOfConfig":"24"},{"size":1945,"mtime":1611914433105,"results":"32","hashOfConfig":"24"},{"size":2256,"mtime":1614671461646,"results":"33","hashOfConfig":"24"},{"size":1321,"mtime":1607766950599,"results":"34","hashOfConfig":"24"},{"size":1407,"mtime":1612174801102,"results":"35","hashOfConfig":"24"},{"size":2058,"mtime":1614678994737,"results":"36","hashOfConfig":"24"},{"size":3361,"mtime":1614675040323,"results":"37","hashOfConfig":"24"},{"size":1764,"mtime":1614673894941,"results":"38","hashOfConfig":"24"},{"size":920,"mtime":1614668727095,"results":"39","hashOfConfig":"24"},{"size":662,"mtime":1614668651945,"results":"40","hashOfConfig":"24"},{"size":1111,"mtime":1614676701349,"results":"41","hashOfConfig":"24"},{"size":2234,"mtime":1614675897785,"results":"42","hashOfConfig":"24"},{"size":451,"mtime":1614668419458,"results":"43","hashOfConfig":"24"},{"size":1780,"mtime":1614668624248,"results":"44","hashOfConfig":"24"},{"size":2086,"mtime":1614668794731,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},"mw43av",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"49"},"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\index.js",["107","108"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ApolloProvider from './ApolloProvider'\n\nReactDOM.render(\n      ApolloProvider,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n",["109","110"],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\App.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\ApolloProvider.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\utils\\AuthRoute.js",["111"],"import React , {useContext} from 'react'\r\nimport {Route , Redirect} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext.js'\r\n\r\nimport Login from '../pages/Login'\r\n\r\nfunction AuthRoute({component : Component , ...rest}) {\r\n  const {user} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n\r\n      {...rest}\r\n      render = {\r\n        (props) =>\r\n          user ? <Redirect to={props.location.pathname} /> : <Component {...props} />\r\n      }\r\n\r\n     />\r\n\r\n  )\r\n}\r\n\r\nfunction LogRoute({component : Component , ...rest}) {\r\n  const {user} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render = {\r\n        (props) =>\r\n          !user ? <Redirect to = {`/login/came_from_=${props.location.pathname}`} /> : <Component {...props} />\r\n      }\r\n     />\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport {AuthRoute , LogRoute};\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\AddPosts.js",["112"],"import React , {useState} from 'react';\r\nimport { useMutation } from '@apollo/client'\r\nimport {GET_POSTS , ADD_POST} from '../utils/GraphQl';\r\n\r\nfunction AddPosts(props){\r\nconst initialState = {\r\n  bookname : '',\r\n  summary  : '',\r\n  tags : '',\r\n  image : ''\r\n}\r\n\r\nconst [ post , setAddPost]  = useState(initialState);\r\nconst [errors , setErrors] = useState({});\r\n\r\nfunction onChange(e){\r\n  setAddPost({\r\n      ...post ,\r\n      [e.target.name] : e.target.value\r\n    });\r\n}\r\n\r\nconst [addPosts , {loading}] = useMutation(ADD_POST , {\r\n  variables : {bookname : post.bookname , summary : post.summary , tags : post.tags , image : post.image },\r\n  update(proxy , res){\r\n    const data = proxy.readQuery({ query : GET_POSTS});\r\n    proxy.writeQuery({ query: GET_POSTS , data : {\r\n      getPosts : [res.data.insertPost , ...data.getPosts]\r\n    }\r\n  });\r\n    props.history.push(\"/\");\r\n  },\r\n  onError :  ({ graphQLErrors, networkError })=>{\r\n        setErrors(graphQLErrors[0].extensions.exception.errors);\r\n  },\r\n})\r\n\r\nfunction handleSubmit(e) {\r\n  e.preventDefault()\r\n  addPosts();\r\n}\r\n\r\n  return(\r\n      <form onSubmit = {handleSubmit} className=\"register\">\r\n            <label htmlFor = \"bookname\" > Book Name:</label>\r\n           <input type=\"text\" className=\"add-post-id\" name = \"bookname\"  placeholder = \"name of the book ...\" value = {post.bookname}  onChange = { onChange }  />\r\n\r\n            <label htmlFor = \"summary\"> Summary: </label>\r\n          <textarea name=\"summary\"  placeholder = \"write a short summary\" value = {post.summary} onChange = { onChange } style = {{height : \"200px\"}}/>\r\n\r\n            <label htmlFor = \"tags\"> Book Genres: </label>\r\n            <input className=\"add-post-id\" type=\"text\" name = \"tags\"  placeholder=\"add hastags before every genre ...\" value = {post.tags} onChange = { onChange } />\r\n\r\n            <label htmlFor = \"image\"> Book Image: </label>\r\n            <input className=\"add-post-id\"  id='fileInput'type=\"text\" name = \"image\"  placeholder=\"https link of the image ...\"value = {post.image} onChange = { onChange } />\r\n\r\n      <button type = \"submit\" className = \"submit\" onClick = {handleSubmit}> Add Post </button>\r\n\r\n        {Object.keys(errors).length > 0 && (\r\n          <div >\r\n            <ul >\r\n              {Object.values(errors).map((value) => (\r\n                <li key={value}>{value}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n</form>\r\n\r\n\r\n\r\n  )\r\n\r\n\r\n}\r\n\r\nexport default AddPosts;\r\n\r\n\r\n\r\n\r\n// 130019504204717\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\YourPosts.js",["113","114"],"import React , {useContext} from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport YourPostComponent from '../components/YourPostComponent'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nimport {YOUR_POSTS} from '../utils/GraphQl.js'\r\n\r\n\r\nfunction YourPosts(props){\r\nconst {user} = useContext(AuthContext);\r\n\r\nconst output = useQuery(YOUR_POSTS ,{\r\nvariables : { userId :  user.id}\r\n});\r\n\r\nconst userId = user.id;\r\n\r\n\r\nif(output.data && output.data.getUserPosts.length== 0){\r\n  return <h1 style = {{\"margin\" : \"20px 60px\"}}> You Have not posted anything yet ;( </h1>\r\n}\r\nreturn (\r\n    <div>\r\n    {\r\n      output.data   &&\r\n      output.data.getUserPosts.map(post=>{\r\n        return <YourPostComponent key = {post._id} {...post} history = {props.history}  />\r\n      })\r\n    }\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nexport default YourPosts;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\SinglePost.js",["115","116","117","118","119","120","121","122","123"],"import React , {useState,useContext,useEffect} from 'react';\r\nimport {useQuery , useMutation} from '@apollo/client';\r\nimport {SINGLE_POST , INSERT_COMMENT,INSERT_LIKES} from '../utils/GraphQl'\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport CommentComponent from '../components/CommentComponent'\r\nimport LikesComments from '../components/likesComments'\r\nimport SummaryAndTitle from '../components/summaryAndTitle.js';\r\n\r\nfunction SinglePost(props){\r\n  const {user} = useContext(AuthContext);\r\n\r\n  const id = (user) ? user.id : ' ';\r\n  const userName = (user) ? user.username : ' ';\r\n\r\n  const postId = props.location.pathname.substring(7);\r\n\r\n  const{loading , errors  , data} = useQuery(SINGLE_POST , {\r\n    variables : {postId : postId }\r\n  })\r\n\r\n\r\nif(loading)\r\n    return <h1>loading ..</h1>;\r\n\r\n\r\n    return(\r\n        <div>\r\n            {\r\n              data &&\r\n             <div className = 'commentDiv'>\r\n              <div className = \"flex\">\r\n                <SummaryAndTitle summary = {data.getPost.summary} image = {data.getPost.image} bookname = {data.getPost.bookname}/>\r\n\r\n                <LikesComments  username = {data.getPost.username} likeCount = {data.getPost.likeCount}\r\n                     commentsLength = {data.getPost.comments.length}  likes = {data.getPost.likes}\r\n                     history = {props.history}\r\n                    postId = {postId}\r\n                     />\r\n             </div>\r\n          </div>\r\n        }\r\n      <section className=\"commentDisplay\">\r\n          <h3>\r\n            Check the reviews!\r\n          </h3>\r\n\r\n          {\r\n            data && data.getPost && data.getPost.comments.length > 0 &&\r\n              data.getPost.comments.map(comment =>{\r\n                return  <CommentComponent  key={comment.id} {...comment } userName = {userName} postId = {postId} postAuthor = {data.getPost.username}/>\r\n              }) || <h1>Be the first to comment</h1>\r\n          }\r\n\r\n      </section>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SinglePost;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\BookMark.js",["124","125","126","127"],"import React , {useContext} from 'react';\r\nimport {gql , useQuery,useMutation} from '@apollo/client'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport PostComponent from '../components/PostComponent'\r\n\r\nimport {READ_QUERY} from '../utils/GraphQl.js'\r\n\r\nfunction BookMark(props){\r\n\r\nconst {user} = useContext(AuthContext);\r\nconst output = useQuery(READ_QUERY , {\r\n  variables : {userId : user.id}\r\n});\r\n\r\nif(!output.data || output.data && output.data.getBookMarks.length === 0){\r\n  return <h1 style = {{\"margin\" : \"20px 60px\" }}> You have no BookMarks ;(</h1>\r\n}\r\n\r\nreturn (\r\n  <div className=\"allPosts\">\r\n  {\r\n    output.data &&\r\n    output.data.getBookMarks.map(post=>{\r\n    return   <PostComponent key = {post._id} {...post} {...props} />;\r\n  })\r\n  }\r\n  </div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default BookMark;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\MenuBar.js",["128","129","130","131","132","133","134","135","136","137"],"import {Link , useLocation} from 'react-router-dom';\r\nimport {useContext , useState} from 'react';\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nfunction MenuBar(){\r\n\r\n  const context = useContext(AuthContext);\r\n  const [ class_name , setClassName] = useState(\"topnav\");\r\n  const currentLocation = useLocation().pathname;\r\n  function handleClick(){\r\n    if(class_name == \"topnav\")\r\n      setClassName(\"topnav responsive\");\r\n    else\r\n        setClassName(\"topnav\");\r\n  }\r\n  return (\r\n      <header>\r\n          <div className={class_name} id=\"myTopnav\">\r\n          <Link to='/'  className = {currentLocation == '/' ? 'activate' : ''}  >Home</Link>\r\n          <Link to = '/add-posts'   className = {currentLocation == '/add-posts' ? 'activate' : ''}             > Add a New Post </Link>\r\n          <Link to = '/your-bookmarks'  className = {currentLocation == '/your-bookmarks' ? 'activate' : ''}    > Your Bookmarks </Link>\r\n          <Link to = '/your-posts'   className = {currentLocation == '/your-posts' ? 'activate' : ''}           > Your Posts </Link>\r\n\r\n          {\r\n            !context.user &&\r\n            <Link to='/login' style = { (class_name == \"topnav\") ? {  float: \"right\" } : {}  }  className = {currentLocation == '/login' ? 'activate' : ''}  >Login</Link>\r\n          }\r\n\r\n          {\r\n            !context.user &&\r\n            <Link to='/register' style = { (class_name == \"topnav\") ? {  float: \"right\" } : {}  }  className = {(currentLocation == '/register') ? 'activate' : ''}  >Register</Link>\r\n          }\r\n\r\n          {\r\n            context.user &&\r\n              <Link to = '/' style = { (class_name == \"topnav\") ? {  float: \"right\" } : {}  } onClick = { () => { context.logout() }}> Logout </Link>\r\n          }\r\n            <Link to=\"#\" className = \"icon\"   onClick = {handleClick}>\r\n              <i class=\"fa fa-bars\"></i>\r\n            </Link>\r\n          </div>\r\n      </header>\r\n\r\n  )\r\n}\r\nexport {MenuBar};\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Register.js",["138"],"import React , {useState} from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport {  useMutation } from '@apollo/client';\r\nimport {REGISTER_USER} from '../utils/GraphQl'\r\n\r\n\r\nfunction Register(props){\r\n  const register = {\r\n    email    : '',\r\n    username : '',\r\n    password : '',\r\n    confirmPassword:''\r\n  };\r\n\r\n\r\n  const [reg , setRegister] = useState(register);\r\n  const [errors , setErrors] = useState({});\r\n\r\n  const [addUser , {loading}] = useMutation(REGISTER_USER , {\r\n    update(proxy , res){\r\n      props.history.push('/login');\r\n    },\r\n    onError :  ({ graphQLErrors, networkError })=>{\r\n      if(graphQLErrors[0].extensions.exception){\r\n        setErrors(graphQLErrors[0].extensions.exception.errors);\r\n      }\r\n    },\r\n    variables : reg\r\n  });\r\n\r\n  const onChange = (e)=>{\r\n    setRegister(\r\n      {\r\n        ...reg ,\r\n        [e.target.name] : e.target.value\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n    addUser();\r\n  }\r\n\r\n  return (\r\n\r\n        <form onSubmit = {handleSubmit} className=\"register\">\r\n            <label htmlFor = \"email\"> Email:</label>\r\n            <input type=\"email\" name = \"email\"  value = {reg.email} onChange = {onChange}/>\r\n\r\n            <label htmlFor = \"username\"> Username: </label>\r\n            <input type=\"text\" id=\"form-id\" name = \"username\" value = {reg.username} onChange = {onChange} />\r\n\r\n            <label htmlFor = \"password\"> Password:</label>\r\n            <input type=\"password\" name = \"password\"  value = {reg.password} onChange = {onChange}/>\r\n\r\n            <label htmlFor = \"password\">Confirm Password: </label>\r\n            <input type=\"password\" name = \"confirmPassword\"  value = {reg.confirmPassword} onChange = {onChange}/>\r\n\r\n           <button type = \"submit\" className = \"registerbtn\"> Register </button>\r\n           <Link to = 'login' className='registerLink'> Already have an account? </Link>\r\n\r\n           {Object.keys(errors).length > 0 && (\r\n             <div >\r\n               <ul >\r\n                 {Object.values(errors).map((value) => (\r\n                   <li key={value}>{value}</li>\r\n                 ))}\r\n               </ul>\r\n             </div>\r\n           )}\r\n        </form>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Register;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\context\\AuthContext.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Home.js",["139"],"import React , {useState} from 'react';\r\nimport { useQuery} from '@apollo/client';\r\nimport PostComponent from '../components/PostComponent'\r\n\r\nimport {GET_POSTS} from '../utils/GraphQl'\r\nfunction Home(props){\r\nconst output = useQuery(GET_POSTS);\r\nconst [searchTerm , setSearchTerm] = useState(\"\");\r\nif(output.loading) {return <h1> ....loading </h1> ;}\r\nlet isNull = 0;\r\nfunction handleSearchQuery(e){\r\n  setSearchTerm(e.target.value);\r\n}\r\n\r\n  return (\r\n      <div>\r\n      <div className=\"search\">\r\n          <input type=\"text\" placeholder=\"search genres or titles\"  onChange = {handleSearchQuery} />\r\n      </div>\r\n\r\n\r\n      <div className = \"allPosts\">\r\n      {\r\n        output.data &&\r\n       output.data.getPosts.filter((post)=>{\r\n        if(searchTerm.trim()  === \"\"){\r\n            return post;\r\n          }\r\n\r\n          else if(post.bookname.toLowerCase().includes(searchTerm.toLowerCase()) || post.tags.filter(tag=> tag.toLowerCase().startsWith(searchTerm.toLowerCase())).length > 0){\r\n              return post;\r\n          }\r\n          else{\r\n            isNull++;\r\n          }\r\n        }).map(post=>{\r\n        return (\r\n          <PostComponent  key = {post._id} {...post} {...props} />\r\n        )\r\n        })\r\n      }\r\n      {\r\n        output.data && output.data.getPosts.length === isNull && <h1>no such post exists ;(</h1>\r\n      }\r\n      </div>\r\n      </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Home;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\Login.js",["140"],"import React , {useState , useContext} from 'react';\r\nimport {useMutation } from '@apollo/client';\r\nimport {Link } from 'react-router-dom';\r\n\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport {LOGIN_USER} from '../utils/GraphQl'\r\n\r\n\r\nfunction Login(props){\r\n  const prev  = props.location.pathname.split(\"=\")[1] || '/'\r\n  console.log(prev);\r\nconst login = {\r\n  email    : '',\r\n  password : ''\r\n};\r\n\r\nconst [log , setLogin] = useState(login);\r\nconst [ errors , setErrors] = useState({});\r\n\r\n\r\nconst context = useContext(AuthContext);\r\n\r\nconst [logUser , {loading}] = useMutation(LOGIN_USER , {\r\n  update(proxy , res){\r\n    console.log(prev);\r\n    context.login(res.data.login);\r\n    props.history.push(prev);\r\n  },\r\n  onError :  ({ graphQLErrors, networkError })=>{\r\n    console.log(graphQLErrors);\r\n    console.log(networkError);\r\n    if(graphQLErrors[0])\r\n      setErrors(graphQLErrors[0].extensions.exception.errors);\r\n  },\r\n  variables : log\r\n});\r\n\r\nconst onChange = (e)=>{\r\n  setLogin(\r\n    {\r\n      ...log ,\r\n      [e.target.name] : e.target.value\r\n    }\r\n  )\r\n}\r\n\r\nconst handleSubmit = (e)=>{\r\n  e.preventDefault();\r\n  logUser();\r\n}\r\n\r\n\r\n  return (\r\n      <form onSubmit = {handleSubmit} className=\"register\">\r\n            <label htmlFor = \"email\"> Email</label>\r\n            <input type=\"email\" name = \"email\"  value = {log.email} onChange = {onChange}/>\r\n            <label htmlFor = \"password\"> Password</label>\r\n            <input type=\"password\" name = \"password\"  value = {log.password} onChange = {onChange}/>\r\n           <button type = \"submit\" className=\"registerbtn\"> Login </button>\r\n\r\n           <Link to = '/register' className='registerLink'> Register Now! </Link>\r\n\r\n           {Object.keys(errors).length > 0 && (\r\n             <div className=\"ui error message\">\r\n             <ul className=\"list\">\r\n             {Object.values(errors).map((value) => (\r\n               <li key={value}>{value}</li>\r\n             ))}\r\n             </ul>\r\n             </div>\r\n           )}\r\n      </form>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Login;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\utils\\GraphQl.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\YourPostComponent.js",["141"],"import React , {useContext}  from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {useMutation} from '@apollo/client';\r\nimport SummaryAndTitle from './summaryAndTitle.js';\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport {YOUR_POSTS , GET_POSTS , DELETE_POST} from '../utils/GraphQl.js'\r\nfunction YourPostComponent({bookname , summary , createdAt , _id , image ,history}){\r\n\r\nconst {user} = useContext(AuthContext);\r\n\r\nconst [deletePost, {loading}] = useMutation(DELETE_POST , {\r\n  variables : {postId : _id },\r\n  refetchQueries: [{\r\n    query:YOUR_POSTS,\r\n    variables: { userId : user.id },\r\n  },\r\n  {\r\n    query : GET_POSTS\r\n  }\r\n]\r\n});\r\n\r\n\r\nfunction handleEditPost(e){\r\n  e.preventDefault();\r\n  history.summary = summary;\r\n  history.push(`/editPost?post=${_id}`);\r\n  console.log(\"hi\");\r\n}\r\nfunction handleSubmit(e){\r\n  e.preventDefault();\r\n  deletePost();\r\n}\r\n\r\nreturn(\r\n<div className = \"allPosts\">\r\n    <div className = \"flex\">\r\n        <div className=\"time\">\r\n        <span>\r\n          {moment(createdAt).fromNow(true)} ago\r\n        </span>\r\n        </div>\r\n      <SummaryAndTitle bookname = {bookname} summary = {summary} image = {image}  />\r\n    <div className=\"subFlex2\">\r\n             <div className=\"full_post_link\">\r\n               <Link to = {`/posts/${_id}`}> Read the full post</Link>\r\n             </div>\r\n\r\n             <div className=\"bookmark\">\r\n             <i className = \"fa fa-trash fa-2x\"  onClick ={handleSubmit} > </i>\r\n             </div>\r\n\r\n             <div className = \"button\">\r\n                <button type = \"submit\" onClick = {handleEditPost}>  Edit Post  </button>\r\n             </div>\r\n    </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n  )\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default YourPostComponent;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\CommentComponent.js",["142"],"import {DELETE_COMMENT , SINGLE_POST} from '../utils/GraphQl'\r\nimport {useMutation} from '@apollo/client';\r\n\r\nfunction CommentComponent({ id , username , body, userName,postId , postAuthor}){\r\n\r\n  const [deleteComment , {loadingComment} ] = useMutation(DELETE_COMMENT , {\r\n      variables : {postId : postId , commentId : id},\r\n      refetchQueries: [{\r\n        query:SINGLE_POST,\r\n        variables: { postId}\r\n      }]\r\n  })\r\n\r\n  const handleOnClick = (e)=>{\r\n    e.preventDefault();\r\n    deleteComment();\r\n  }\r\n\r\nreturn(\r\n  <footer>\r\n        <span id=\"author\" >{username} : </span>\r\n        <section className=\"deleteCommentButton\">\r\n            <p>{body}</p>\r\n            {\r\n              (username === userName || userName === postAuthor ) && <i className = \"fa fa-trash\" onClick ={handleOnClick} >\r\n               </i>\r\n            }\r\n        </section>\r\n  </footer>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default CommentComponent;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\PostComponent.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\CommentForm.js",["143","144","145","146","147"],"import {useQuery , useMutation} from '@apollo/client';\r\nimport {SINGLE_POST , INSERT_COMMENT,INSERT_LIKES} from '../utils/GraphQl'\r\nimport React , {useState,useContext,useEffect} from 'react';\r\n\r\n\r\nfunction CommentForm({visibleForm , postId , history , user}){\r\n\r\nconst [singlePost , setSinglePost] = useState('');\r\n\r\nconst [insertComment , {loadingComment} ] = useMutation(INSERT_COMMENT , {\r\n    variables : {postId : postId , body : singlePost},\r\n    refetchQueries: [{\r\n      query:SINGLE_POST,\r\n      variables: { postId}\r\n    }]\r\n  });\r\n\r\n\r\nconst handleSubmit = (e)=>{\r\n    e.preventDefault();\r\n      if(!user){\r\n          return history.push(`/login/came_from=/posts/${postId}`);\r\n}    insertComment();\r\n}\r\n\r\nfunction onChange(){\r\n  setSinglePost(document.getElementById('commentDiv').innerText);\r\n}\r\n\r\nreturn(\r\n  <form onSubmit = {handleSubmit} className={`${visibleForm}`}>\r\n    <div contentEditable = \"true\"  value = { singlePost }  onInput = { onChange } id=\"commentDiv\" aria-label=\"Add a comment\"></div>\r\n    <button type='submit'>Comment</button>\r\n  </form>\r\n)\r\n}\r\n\r\n\r\nexport default CommentForm;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\pages\\EditPost.js",["148","149","150","151","152"],"\r\nimport React , {useState , useEffect}from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {useMutation , useQuery} from '@apollo/client';\r\nimport {EDIT_POST , GET_POST_TO_EDIT , GET_POSTS , SINGLE_POST} from '../utils/GraphQl'\r\n\r\nfunction EditPost(props){\r\n  const location = useLocation();\r\n  const postId = location.search.split(\"=\")[1];\r\n  const [showModal ,setShowModal] = useState('modal');\r\n  console.log(postId);\r\n  //\r\n  const{loading , errors  , data } = useQuery(GET_POST_TO_EDIT , {\r\n    variables : {postId : postId }\r\n  })\r\n  const initPost = {\r\n    bookname : \"\",\r\n    summary  : \"\"\r\n  }\r\n  const [editPost , setEditPost] = useState(initPost);\r\n\r\n  const [editPostFunc , {_}] = useMutation(EDIT_POST , {\r\n    variables :  {postId , bookname : editPost.bookname , summary : editPost.summary},\r\n    refetchQueries: [{\r\n      query:GET_POSTS\r\n    } , {\r\n      query : SINGLE_POST ,\r\n      variables : {postId}\r\n    }],\r\n    update(proxy , res){\r\n      props.history.push(\"/\");\r\n    },\r\n    onError :  ({ graphQLErrors, networkError })=>{\r\n      console.log(graphQLErrors);\r\n      console.log(networkError);\r\n    },\r\n  })\r\n\r\n\r\n  useEffect(()=>{\r\n    if(!loading){\r\n      setEditPost({\r\n        bookname : data.getPost.bookname,\r\n        summary  : data.getPost.summary\r\n      });\r\n    }\r\n  } , [loading]);\r\n\r\nif(loading){\r\n  return <h1>...loading</h1>;\r\n}\r\n\r\n\r\n  function onChange(e){\r\n    setEditPost({ ...editPost , [e.target.name] : e.target.value})\r\n  }\r\n\r\n  function handleClose(e){\r\n    e.preventDefault()\r\n    setShowModal('notAModal');\r\n    props.history.push('/');\r\n  }\r\n\r\n\r\n  function handleEditPost(e){\r\n    e.preventDefault();\r\n    editPostFunc();\r\n  }\r\n\r\n\r\n  return(\r\n      <form onSubmit = {handleEditPost} className=\"register\">\r\n          <label htmlFor = \"bookname\">Bookname:</label>\r\n          <input type=\"text\" name = \"bookname\" value={editPost.bookname} onChange = {onChange} />\r\n          <label htmlFor = \"summary\">Summary:</label>\r\n          <textarea type=\"text\" name = \"summary\" value={editPost.summary} onChange = {onChange} >\r\n\r\n          </textarea>\r\n         <button type = \"submit\" className=\"registerbtn\"> Edit </button>\r\n      </form>\r\n  )\r\n}\r\n\r\n\r\nexport default EditPost;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\summaryAndTitle.js",[],"D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\bookmarkAndFullPost.js",["153","154"],"\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport {READ_QUERY , ADD_BOOKMARK} from '../utils/GraphQl.js'\r\nimport { useMutation} from  '@apollo/client'\r\nimport  {useContext,useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nfunction BookmarkAndFullPost({_id , username , bookmarks , history}){\r\n  const {user} = useContext(AuthContext);\r\n  const id =  (user) ? user.id : \" \";\r\n  const userName = (user) ? user.username : \" \";\r\n\r\nconst [addBookMark , {isLoading}] = useMutation(ADD_BOOKMARK , {\r\n      variables : {userId : id , postId : _id },\r\n      refetchQueries: [{\r\n        query:READ_QUERY,\r\n        variables: { userId : id },\r\n      }] ,\r\n      onErrors : (graphQLErrors)=>{\r\n          console.log(graphQLErrors);\r\n      }\r\n  })\r\n\r\n\r\n  let initialIcon = ' ';\r\n\r\n  const bookmarkIndex = bookmarks.findIndex(b => b.username ===userName);\r\n  if(bookmarkIndex>=0)\r\n      initialIcon = 'fa-bookmark';\r\n  else\r\n      initialIcon = 'fa-bookmark-o';\r\n\r\n\r\n  const [icon , setIcon] = useState(initialIcon);\r\n\r\nfunction bookmark(e){\r\n    e.preventDefault();\r\n    if(!user){\r\n     return  history.push(\"/login\");\r\n    }\r\n    if(icon == 'fa-bookmark-o')\r\n      setIcon('fa-bookmark');\r\n    else\r\n      setIcon('fa-bookmark-o');\r\n    addBookMark();\r\n}\r\n\r\nreturn(\r\n\r\n        <div className=\"subFlex2\">\r\n           <div className = \"username\">\r\n              <span id=\"author\">Author</span> :  {username}\r\n           </div>\r\n           <div className=\"full_post_link\">\r\n             <Link to = {`/posts/${_id}`}> Read the full post</Link>\r\n           </div>\r\n           <div className=\"bookmark\">\r\n           <i className={`fa ${icon} fa-2x`} onClick = {bookmark} > </i>\r\n           </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BookmarkAndFullPost;\r\n","D:\\Users\\manas kalangan\\Documents\\manas\\WTL_MINIPROJECT\\Book-blog\\client\\src\\components\\likesComments.js",["155","156","157","158"],"\r\n\r\nimport {useQuery , useMutation} from '@apollo/client';\r\nimport {SINGLE_POST , INSERT_COMMENT,INSERT_LIKES} from '../utils/GraphQl'\r\nimport React , {useState,useContext,useEffect} from 'react';\r\nimport {AuthContext} from '../context/AuthContext';\r\nimport CommentForm from './CommentForm.js';\r\n\r\nfunction LikesComments({username , likeCount , commentsLength , likes, postId , history}){\r\n\r\nconst {user} = useContext(AuthContext);\r\nconst id = (user) ? user.id : ' ';\r\nconst userName = (user) ? user.username : ' ';\r\n\r\nlet initialIcon = ' ';\r\nconst [icon , setIcon] = useState(initialIcon);\r\nconst [visibleForm , setVisibleForm] = useState('invisible'); // for Comment Form\r\n\r\nconst [insertLikes , {loadingLikes} ] = useMutation(INSERT_LIKES , {\r\n      variables : {postId : postId},\r\n      refetchQueries: [{\r\n        query:SINGLE_POST,\r\n        variables: { postId}\r\n      }]\r\n});\r\n\r\nlikes = likes || [] ;\r\n\r\nuseEffect(()=>{\r\n    if(likes.findIndex(l=> l.username === userName) >= 0){\r\n      initialIcon = 'fa-heart red-color';\r\n    }\r\n    else {\r\n      initialIcon = 'fa-heart-o';\r\n    }\r\n    setIcon(initialIcon);\r\n},[likes , id])\r\n\r\n\r\nconst handleLikes = (e)=>{\r\n    e.preventDefault();\r\n    if(!user)\r\n        return history.push(`/login/came_from=/posts/${postId}`);\r\n    insertLikes()\r\n}\r\n\r\nconsole.log(visibleForm);\r\nreturn (\r\n  <div>\r\n        <div className=\"subFlex2\">\r\n          <div className=\"username\">\r\n            <span id=\"author\">Author</span> :   {username}\r\n          </div>\r\n\r\n          <div className='likes'>\r\n            <i className = {`fa ${icon} fa-2x`} onClick = {handleLikes}></i>\r\n            <p>{likeCount} </p>\r\n         </div>\r\n         <div className='comments'>\r\n           <i className = 'fa fa-comment-o fa-2x' onClick = {()=>(visibleForm === 'invisible') ? setVisibleForm('commentForm') : setVisibleForm('invisible') }> </i>\r\n          <p>{commentsLength}</p>\r\n        </div>\r\n      </div>\r\n      <CommentForm   visibleForm = {visibleForm} history ={history}  postId = {postId} user = {user} />\r\n</div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default LikesComments;\r\n",{"ruleId":"159","severity":1,"message":"160","line":1,"column":8,"nodeType":"161","messageId":"162","endLine":1,"endColumn":13},{"ruleId":"159","severity":1,"message":"163","line":4,"column":8,"nodeType":"161","messageId":"162","endLine":4,"endColumn":11},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"159","severity":1,"message":"168","line":5,"column":8,"nodeType":"161","messageId":"162","endLine":5,"endColumn":13},{"ruleId":"159","severity":1,"message":"169","line":23,"column":20,"nodeType":"161","messageId":"162","endLine":23,"endColumn":27},{"ruleId":"159","severity":1,"message":"170","line":16,"column":7,"nodeType":"161","messageId":"162","endLine":16,"endColumn":13},{"ruleId":"171","severity":1,"message":"172","line":19,"column":50,"nodeType":"173","messageId":"174","endLine":19,"endColumn":52},{"ruleId":"159","severity":1,"message":"175","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"176","line":1,"column":37,"nodeType":"161","messageId":"162","endLine":1,"endColumn":46},{"ruleId":"159","severity":1,"message":"177","line":2,"column":20,"nodeType":"161","messageId":"162","endLine":2,"endColumn":31},{"ruleId":"159","severity":1,"message":"178","line":3,"column":23,"nodeType":"161","messageId":"162","endLine":3,"endColumn":37},{"ruleId":"159","severity":1,"message":"179","line":3,"column":38,"nodeType":"161","messageId":"162","endLine":3,"endColumn":50},{"ruleId":"159","severity":1,"message":"180","line":12,"column":9,"nodeType":"161","messageId":"162","endLine":12,"endColumn":11},{"ruleId":"159","severity":1,"message":"181","line":17,"column":19,"nodeType":"161","messageId":"162","endLine":17,"endColumn":25},{"ruleId":"182","severity":1,"message":"183","line":48,"column":70,"nodeType":"184","messageId":"185","endLine":48,"endColumn":72},{"ruleId":"182","severity":1,"message":"183","line":51,"column":18,"nodeType":"184","messageId":"185","endLine":51,"endColumn":20},{"ruleId":"159","severity":1,"message":"186","line":2,"column":9,"nodeType":"161","messageId":"162","endLine":2,"endColumn":12},{"ruleId":"159","severity":1,"message":"177","line":2,"column":24,"nodeType":"161","messageId":"162","endLine":2,"endColumn":35},{"ruleId":"182","severity":1,"message":"187","line":15,"column":17,"nodeType":"184","messageId":"185","endLine":15,"endColumn":19},{"ruleId":"182","severity":1,"message":"187","line":15,"column":32,"nodeType":"184","messageId":"185","endLine":15,"endColumn":34},{"ruleId":"171","severity":1,"message":"172","line":11,"column":19,"nodeType":"173","messageId":"174","endLine":11,"endColumn":21},{"ruleId":"171","severity":1,"message":"172","line":19,"column":54,"nodeType":"173","messageId":"174","endLine":19,"endColumn":56},{"ruleId":"171","severity":1,"message":"172","line":20,"column":66,"nodeType":"173","messageId":"174","endLine":20,"endColumn":68},{"ruleId":"171","severity":1,"message":"172","line":21,"column":70,"nodeType":"173","messageId":"174","endLine":21,"endColumn":72},{"ruleId":"171","severity":1,"message":"172","line":22,"column":67,"nodeType":"173","messageId":"174","endLine":22,"endColumn":69},{"ruleId":"171","severity":1,"message":"172","line":26,"column":53,"nodeType":"173","messageId":"174","endLine":26,"endColumn":55},{"ruleId":"171","severity":1,"message":"172","line":26,"column":126,"nodeType":"173","messageId":"174","endLine":26,"endColumn":128},{"ruleId":"171","severity":1,"message":"172","line":31,"column":56,"nodeType":"173","messageId":"174","endLine":31,"endColumn":58},{"ruleId":"171","severity":1,"message":"172","line":31,"column":130,"nodeType":"173","messageId":"174","endLine":31,"endColumn":132},{"ruleId":"171","severity":1,"message":"172","line":36,"column":52,"nodeType":"173","messageId":"174","endLine":36,"endColumn":54},{"ruleId":"159","severity":1,"message":"169","line":19,"column":21,"nodeType":"161","messageId":"162","endLine":19,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":25,"column":42,"nodeType":"190","messageId":"191","endLine":25,"endColumn":44},{"ruleId":"159","severity":1,"message":"169","line":23,"column":19,"nodeType":"161","messageId":"162","endLine":23,"endColumn":26},{"ruleId":"159","severity":1,"message":"169","line":12,"column":21,"nodeType":"161","messageId":"162","endLine":12,"endColumn":28},{"ruleId":"159","severity":1,"message":"192","line":6,"column":27,"nodeType":"161","messageId":"162","endLine":6,"endColumn":41},{"ruleId":"159","severity":1,"message":"193","line":1,"column":9,"nodeType":"161","messageId":"162","endLine":1,"endColumn":17},{"ruleId":"159","severity":1,"message":"179","line":2,"column":38,"nodeType":"161","messageId":"162","endLine":2,"endColumn":50},{"ruleId":"159","severity":1,"message":"194","line":3,"column":26,"nodeType":"161","messageId":"162","endLine":3,"endColumn":36},{"ruleId":"159","severity":1,"message":"176","line":3,"column":37,"nodeType":"161","messageId":"162","endLine":3,"endColumn":46},{"ruleId":"159","severity":1,"message":"192","line":10,"column":25,"nodeType":"161","messageId":"162","endLine":10,"endColumn":39},{"ruleId":"159","severity":1,"message":"195","line":10,"column":10,"nodeType":"161","messageId":"162","endLine":10,"endColumn":19},{"ruleId":"159","severity":1,"message":"181","line":13,"column":19,"nodeType":"161","messageId":"162","endLine":13,"endColumn":25},{"ruleId":"159","severity":1,"message":"196","line":22,"column":26,"nodeType":"161","messageId":"162","endLine":22,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":47,"column":7,"nodeType":"199","endLine":47,"endColumn":16,"suggestions":"200"},{"ruleId":"159","severity":1,"message":"201","line":58,"column":12,"nodeType":"161","messageId":"162","endLine":58,"endColumn":23},{"ruleId":"159","severity":1,"message":"202","line":14,"column":23,"nodeType":"161","messageId":"162","endLine":14,"endColumn":32},{"ruleId":"171","severity":1,"message":"172","line":42,"column":13,"nodeType":"173","messageId":"174","endLine":42,"endColumn":15},{"ruleId":"159","severity":1,"message":"193","line":3,"column":9,"nodeType":"161","messageId":"162","endLine":3,"endColumn":17},{"ruleId":"159","severity":1,"message":"178","line":4,"column":23,"nodeType":"161","messageId":"162","endLine":4,"endColumn":37},{"ruleId":"159","severity":1,"message":"203","line":19,"column":23,"nodeType":"161","messageId":"162","endLine":19,"endColumn":35},{"ruleId":"197","severity":1,"message":"204","line":31,"column":21,"nodeType":"205","endLine":31,"endColumn":41},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","no-native-reassign",["206"],"no-negated-in-lhs",["207"],"'Login' is defined but never used.","'loading' is assigned a value but never used.","'userId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'useMutation' is defined but never used.","'INSERT_COMMENT' is defined but never used.","'INSERT_LIKES' is defined but never used.","'id' is assigned a value but never used.","'errors' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'gql' is defined but never used.","Unexpected mix of '||' and '&&'.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'loadingComment' is assigned a value but never used.","'useQuery' is defined but never used.","'useContext' is defined but never used.","'showModal' is assigned a value but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.getPost.bookname' and 'data.getPost.summary'. Either include them or remove the dependency array.","ArrayExpression",["208"],"'handleClose' is defined but never used.","'isLoading' is assigned a value but never used.","'loadingLikes' is assigned a value but never used.","Assignments to the 'initialIcon' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [data.getPost.bookname, data.getPost.summary, loading]",{"range":"211","text":"212"},[1322,1331],"[data.getPost.bookname, data.getPost.summary, loading]"]